general =
{
	name = "Player";
	volume_range_db = 60 ;

	audio_backend_latency_offset_in_seconds = -0.1; // -0.75 before. -0.23 This is added to the latency requested by the player to delay or advance the output by a fixed amount.
//		Use it, for example, to compensate for a fixed delay in the audio back end.
//		E.g. if the output device, e.g. a soundbar, takes 100 ms to process audio, set this to -0.1 to deliver the audio
//		to the output device 100 ms early, allowing it time to process the audio and output it perfectly in sync.


	audio_backend_buffer_desired_length_in_seconds = 0.35; // 1.5 before. If set too small, buffer underflow occurs on low-powered machines.
//		Too long and the response time to volume changes becomes annoying.
//		Default is 0.2 seconds in the alsa backend, 0.35 seconds in the pa backend and 1.0 seconds otherwise.


};

sessioncontrol =
{
	run_this_before_play_begins = "/player/airplayon.sh";
  	run_this_after_play_ends    = "/player/airplayoff.sh";
	allow_session_interruption = "yes";
};

alsa =
{
	
	output_device = "default";
	//output_device = "hw:0";
	//output_device = "btspeaker";

	//mixer_control_name = "default";
	//mixer_control_name = "PCM"; // the name of the mixer to use to adjust output volume. If not specified, volume is adjusted in software.
	//mixer_control_name = "ENEBY30 - A2DP"; //taken from amixer scontrols -D bluealsa
	
	//mixer_device = "bluealsa"; // the mixer_device default is whatever the output_device is. Normally you wouldn't have to use this.

	//disable_synchronization = "yes"; // Set to "yes" to disable synchronization. Default is "no" 
//		This is really meant for troubleshooting.

};

